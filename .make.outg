micko.y: In function ‘yyparse’:
micko.y:254:57: warning: passing argument 1 of ‘get_type’ makes integer from pointer without a cast [-Wint-conversion]
  254 |         if(get_type($1) != get_type($3))
      |                                                         ^     
      |                                                         |
      |                                                         struct exp_vals *
In file included from micko.y:5:
symtab.h:38:23: note: expected ‘int’ but argument is of type ‘struct exp_vals *’
   38 | unsigned get_type(int index);
      |                   ~~~~^~~~~
micko.y:260:31: warning: passing argument 1 of ‘gen_sym_name’ makes integer from pointer without a cast [-Wint-conversion]
  260 |         gen_sym_name($3);
      |                      ~~~~     ^     
      |                               |
      |                               struct exp_vals *
In file included from micko.y:6:
codegen.h:14:23: note: expected ‘int’ but argument is of type ‘struct exp_vals *’
   14 | void gen_sym_name(int index);
      |                   ~~~~^~~~~
micko.y:262:30: warning: passing argument 1 of ‘free_if_reg’ makes integer from pointer without a cast [-Wint-conversion]
  262 |         free_if_reg($3);
      |                     ~~~~     ^     
      |                              |
      |                              struct exp_vals *
In file included from micko.y:6:
codegen.h:10:22: note: expected ‘int’ but argument is of type ‘struct exp_vals *’
   10 | void free_if_reg(int reg_index);
      |                  ~~~~^~~~~~~~~
micko.y:274:48: error: ‘ARR_PAR’ undeclared (first use in this function)
  274 |  int head = lookup_symbol($1, ARR | ARR_PAR);
      |                                                ^      
micko.y:274:48: note: each undeclared identifier is reported only once for each function it appears in
In file included from micko.y:4:
micko.y:276:7: warning: too many arguments for format [-Wformat-extra-args]
  276 |   err("'&s' undeclared", $1);
      |       ^~~~~~~~~~~~~~~~~
defs.h:20:44: note: in definition of macro ‘err’
   20 | #define err(args...)  sprintf(char_buffer, args), yyerror(char_buffer)
      |                                            ^~~~
micko.y:280:8: warning: too many arguments for format [-Wformat-extra-args]
  280 |    err("'&s' index out of range", $1);
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
defs.h:20:44: note: in definition of macro ‘err’
   20 | #define err(args...)  sprintf(char_buffer, args), yyerror(char_buffer)
      |                                            ^~~~
micko.y:282:15: warning: assignment to ‘struct exp_vals *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  282 |  $$ = head;
      |               ^
micko.y:286:22: warning: assignment to ‘struct exp_vals *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  286 |         $$ = lookup_symbol($1, VAR|PAR|ARR);
      |                      ^
micko.y:287:25: warning: comparison between pointer and integer
  287 |         if($$ == NO_INDEX)
      |                         ^~
micko.y:292:22: warning: assignment to ‘struct exp_vals *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  292 |         $$ = take_reg();
      |                      ^
micko.y:293:32: warning: passing argument 2 of ‘gen_mov’ makes integer from pointer without a cast [-Wint-conversion]
  293 |         gen_mov(FUN_REG, $$);
      |                          ~~~~  ^     
      |                                |
      |                                struct exp_vals *
In file included from micko.y:6:
codegen.h:20:35: note: expected ‘int’ but argument is of type ‘struct exp_vals *’
   20 | void gen_mov(int input_index, int output_index);
      |                               ~~~~^~~~~~~~~~~~
micko.y:297:22: warning: assignment to ‘struct exp_vals *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  297 |       { $$ = $2; }
      |                      ^
